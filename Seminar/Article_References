REFERENCES

[1] T. Ye, L. Zhang, L. Wang and X. Li, "An Empirical Study on Detecting and Fixing Buffer Overflow Bugs," 2016 IEEE International Conference on Software Testing, Verification and Validation (ICST), Chicago, IL, 2016, pp. 91-101, doi: 10.1109/ICST.2016.21.

[2] M. Ma, L. Chen and G. Shi, "Dam: A Practical Scheme to Mitigate Data-Oriented Attacks with Tagged Memory Based on Hardware," 2019 26th Asia-Pacific Software Engineering Conference (APSEC), Putrajaya, Malaysia, 2019, pp. 204-211, doi: 10.1109/APSEC48747.2019.00036.

[3] Shi, Junjing (Shanghai, CN), Long, Qin (Shanghai, CN), Gao, Liming (Shanghai, CN), Rothman, Michael A. (Puyallup, WA, US), Zimmer, Vincent J., (Federal Way, WA, US) 2020, METHODS AND APPARATUS TO PROTECT MEMORY FROM BUFFER OVERFLOW AND/OR UNDERFLOW, United States, Intel Corporation (Santa Clara, CA, US), 20200125497

[4] Zhiyong Jin, Yongfu Chen, Tian Liu, Kai Li, Zhenting Wang, and Jiongzhi Zheng. 2019. A Novel and Fine-grained Heap Randomization Allocation Strategy for Effectively Alleviating Heap Buffer Overflow Vulnerabilities. In Proceedings of the 2019 4th International Conference on Mathematics and Artificial Intelligence (ICMAI 2019). Association for Computing Machinery, New York, NY, USA, 115–122. DOI:https://doi.org/10.1145/3325730.3325738
  
[5] Yang Zhao, Xingzhong Du, Paddy Krishnan, and Cristina Cifuentes. 2018. Buffer overflow detection for C programs is hard to learn. In Companion Proceedings for the ISSTA/ECOOP 2018 Workshops (ISSTA ’18). Association for Computing Machinery, New York, NY, USA, 8–9. DOI:https://doi.org/10.1145/3236454.3236455
  
[6] L. Xu, W. Jia, W. Dong and Y. Li, "Automatic Exploit Generation for Buffer Overflow Vulnerabilities," 2018 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C), Lisbon, 2018, pp. 463-468, doi: 10.1109/QRS-C.2018.00085.

[7] Khurana M., Yadav R., Kumari M. (2018) Buffer Overflow and SQL Injection: To Remotely Attack and Access Information. In: Bokhari M., Agrawal N., Saini D. (eds) Cyber Security. Advances in Intelligent Systems and Computing, vol 729. Springer, Singapore

[8] Rogers, Alexis, L. and Sowers, Ryan, 2019 Calhoun,  DEFENSIVE BINARY CODE INSTRUMENTATION TO PROTECT AGAINST BUFFER OVERFLOW ATTACKS, In Monterey, CA; Naval Postgraduate School.

[9] Al Sardy L., Saglietti F., Tang T., Sonnenberg H. (2018) Constraint-Based Testing for Buffer Overflows. In: Gallina B., Skavhaug A., Schoitsch E., Bitsch F. (eds) Computer Safety, Reliability, and Security. SAFECOMP 2018. Lecture Notes in Computer Science, vol 11094. Springer, Cham

[10] Ning Huang et al 2019 IOP Conf. Ser.: Earth Environ. Sci.252 042100

